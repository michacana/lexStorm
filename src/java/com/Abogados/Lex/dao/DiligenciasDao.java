/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.Abogados.Lex.dao;

import java.util.Date;
import com.Abogados.Lex.dto.*;
import com.Abogados.Lex.exceptions.*;

public interface DiligenciasDao
{
	/** 
	 * Inserts a new row in the DILIGENCIAS table.
	 */
	public DiligenciasPk insert(Diligencias dto) throws DiligenciasDaoException;

	/** 
	 * Updates a single row in the DILIGENCIAS table.
	 */
	public void update(DiligenciasPk pk, Diligencias dto) throws DiligenciasDaoException;

	/** 
	 * Deletes a single row in the DILIGENCIAS table.
	 */
	public void delete(DiligenciasPk pk) throws DiligenciasDaoException;

	/** 
	 * Returns the rows from the DILIGENCIAS table that matches the specified primary-key value.
	 */
	public Diligencias findByPrimaryKey(DiligenciasPk pk) throws DiligenciasDaoException;

	/** 
	 * Returns all rows from the DILIGENCIAS table that match the criteria 'ID_DILIGENCIA = :idDiligencia'.
	 */
	public Diligencias findByPrimaryKey(long idDiligencia) throws DiligenciasDaoException;

	/** 
	 * Returns all rows from the DILIGENCIAS table that match the criteria ''.
	 */
	public Diligencias[] findAll() throws DiligenciasDaoException;

	/** 
	 * Returns all rows from the DILIGENCIAS table that match the criteria 'ID_CAUSA = :idCausa'.
	 */
	public Diligencias[] findByCausas(long idCausa) throws DiligenciasDaoException;

	/** 
	 * Returns all rows from the DILIGENCIAS table that match the criteria 'ID_DILIGENCIA = :idDiligencia'.
	 */
	public Diligencias[] findWhereIdDiligenciaEquals(long idDiligencia) throws DiligenciasDaoException;

	/** 
	 * Returns all rows from the DILIGENCIAS table that match the criteria 'FECHA_HORA = :fechaHora'.
	 */
	public Diligencias[] findWhereFechaHoraEquals(Date fechaHora) throws DiligenciasDaoException;

	/** 
	 * Returns all rows from the DILIGENCIAS table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Diligencias[] findWhereDescripcionEquals(String descripcion) throws DiligenciasDaoException;

	/** 
	 * Returns all rows from the DILIGENCIAS table that match the criteria 'ID_CAUSA = :idCausa'.
	 */
	public Diligencias[] findWhereIdCausaEquals(long idCausa) throws DiligenciasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the DILIGENCIAS table that match the specified arbitrary SQL statement
	 */
	public Diligencias[] findByDynamicSelect(String sql, Object[] sqlParams) throws DiligenciasDaoException;

	/** 
	 * Returns all rows from the DILIGENCIAS table that match the specified arbitrary SQL statement
	 */
	public Diligencias[] findByDynamicWhere(String sql, Object[] sqlParams) throws DiligenciasDaoException;

}
