/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.Abogados.Lex.dao;

import com.Abogados.Lex.dto.*;
import com.Abogados.Lex.exceptions.*;

public interface CitaEstadosDao
{
	/** 
	 * Inserts a new row in the CITA_ESTADOS table.
	 */
	public CitaEstadosPk insert(CitaEstados dto) throws CitaEstadosDaoException;

	/** 
	 * Updates a single row in the CITA_ESTADOS table.
	 */
	public void update(CitaEstadosPk pk, CitaEstados dto) throws CitaEstadosDaoException;

	/** 
	 * Deletes a single row in the CITA_ESTADOS table.
	 */
	public void delete(CitaEstadosPk pk) throws CitaEstadosDaoException;

	/** 
	 * Returns the rows from the CITA_ESTADOS table that matches the specified primary-key value.
	 */
	public CitaEstados findByPrimaryKey(CitaEstadosPk pk) throws CitaEstadosDaoException;

	/** 
	 * Returns all rows from the CITA_ESTADOS table that match the criteria 'ID_ESTADO_CITA = :idEstadoCita'.
	 */
	public CitaEstados findByPrimaryKey(long idEstadoCita) throws CitaEstadosDaoException;

	/** 
	 * Returns all rows from the CITA_ESTADOS table that match the criteria ''.
	 */
	public CitaEstados[] findAll() throws CitaEstadosDaoException;

	/** 
	 * Returns all rows from the CITA_ESTADOS table that match the criteria 'ID_ESTADO_CITA = :idEstadoCita'.
	 */
	public CitaEstados[] findWhereIdEstadoCitaEquals(long idEstadoCita) throws CitaEstadosDaoException;

	/** 
	 * Returns all rows from the CITA_ESTADOS table that match the criteria 'NOMBRE = :nombre'.
	 */
	public CitaEstados[] findWhereNombreEquals(String nombre) throws CitaEstadosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the CITA_ESTADOS table that match the specified arbitrary SQL statement
	 */
	public CitaEstados[] findByDynamicSelect(String sql, Object[] sqlParams) throws CitaEstadosDaoException;

	/** 
	 * Returns all rows from the CITA_ESTADOS table that match the specified arbitrary SQL statement
	 */
	public CitaEstados[] findByDynamicWhere(String sql, Object[] sqlParams) throws CitaEstadosDaoException;

}
