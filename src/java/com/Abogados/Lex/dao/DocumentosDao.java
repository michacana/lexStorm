/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.Abogados.Lex.dao;

import java.util.Date;
import com.Abogados.Lex.dto.*;
import com.Abogados.Lex.exceptions.*;

public interface DocumentosDao
{
	/** 
	 * Inserts a new row in the DOCUMENTOS table.
	 */
	public DocumentosPk insert(Documentos dto) throws DocumentosDaoException;

	/** 
	 * Updates a single row in the DOCUMENTOS table.
	 */
	public void update(DocumentosPk pk, Documentos dto) throws DocumentosDaoException;

	/** 
	 * Deletes a single row in the DOCUMENTOS table.
	 */
	public void delete(DocumentosPk pk) throws DocumentosDaoException;

	/** 
	 * Returns the rows from the DOCUMENTOS table that matches the specified primary-key value.
	 */
	public Documentos findByPrimaryKey(DocumentosPk pk) throws DocumentosDaoException;

	/** 
	 * Returns all rows from the DOCUMENTOS table that match the criteria 'ID_DOCUMENTO = :idDocumento'.
	 */
	public Documentos findByPrimaryKey(long idDocumento) throws DocumentosDaoException;

	/** 
	 * Returns all rows from the DOCUMENTOS table that match the criteria ''.
	 */
	public Documentos[] findAll() throws DocumentosDaoException;

	/** 
	 * Returns all rows from the DOCUMENTOS table that match the criteria 'ID_CONTRATO = :idContrato'.
	 */
	public Documentos[] findByContratos(long idContrato) throws DocumentosDaoException;

	/** 
	 * Returns all rows from the DOCUMENTOS table that match the criteria 'ID_DOCUMENTO = :idDocumento'.
	 */
	public Documentos[] findWhereIdDocumentoEquals(long idDocumento) throws DocumentosDaoException;

	/** 
	 * Returns all rows from the DOCUMENTOS table that match the criteria 'URL = :url'.
	 */
	public Documentos[] findWhereUrlEquals(String url) throws DocumentosDaoException;

	/** 
	 * Returns all rows from the DOCUMENTOS table that match the criteria 'CREADO = :creado'.
	 */
	public Documentos[] findWhereCreadoEquals(Date creado) throws DocumentosDaoException;

	/** 
	 * Returns all rows from the DOCUMENTOS table that match the criteria 'ID_CONTRATO = :idContrato'.
	 */
	public Documentos[] findWhereIdContratoEquals(long idContrato) throws DocumentosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the DOCUMENTOS table that match the specified arbitrary SQL statement
	 */
	public Documentos[] findByDynamicSelect(String sql, Object[] sqlParams) throws DocumentosDaoException;

	/** 
	 * Returns all rows from the DOCUMENTOS table that match the specified arbitrary SQL statement
	 */
	public Documentos[] findByDynamicWhere(String sql, Object[] sqlParams) throws DocumentosDaoException;

}
