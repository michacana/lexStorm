/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.Abogados.Lex.dao;

import com.Abogados.Lex.dto.*;
import com.Abogados.Lex.exceptions.*;

public interface ComunaDao
{
	/** 
	 * Inserts a new row in the COMUNA table.
	 */
	public ComunaPk insert(Comuna dto) throws ComunaDaoException;

	/** 
	 * Updates a single row in the COMUNA table.
	 */
	public void update(ComunaPk pk, Comuna dto) throws ComunaDaoException;

	/** 
	 * Deletes a single row in the COMUNA table.
	 */
	public void delete(ComunaPk pk) throws ComunaDaoException;

	/** 
	 * Returns the rows from the COMUNA table that matches the specified primary-key value.
	 */
	public Comuna findByPrimaryKey(ComunaPk pk) throws ComunaDaoException;

	/** 
	 * Returns all rows from the COMUNA table that match the criteria 'ID_COMUNA = :idComuna'.
	 */
	public Comuna findByPrimaryKey(long idComuna) throws ComunaDaoException;

	/** 
	 * Returns all rows from the COMUNA table that match the criteria ''.
	 */
	public Comuna[] findAll() throws ComunaDaoException;

	/** 
	 * Returns all rows from the COMUNA table that match the criteria 'ID_PROVINCIA = :idProvincia'.
	 */
	public Comuna[] findByProvincia(long idProvincia) throws ComunaDaoException;

	/** 
	 * Returns all rows from the COMUNA table that match the criteria 'ID_COMUNA = :idComuna'.
	 */
	public Comuna[] findWhereIdComunaEquals(long idComuna) throws ComunaDaoException;

	/** 
	 * Returns all rows from the COMUNA table that match the criteria 'NOMBRE = :nombre'.
	 */
	public Comuna[] findWhereNombreEquals(String nombre) throws ComunaDaoException;

	/** 
	 * Returns all rows from the COMUNA table that match the criteria 'ID_PROVINCIA = :idProvincia'.
	 */
	public Comuna[] findWhereIdProvinciaEquals(long idProvincia) throws ComunaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the COMUNA table that match the specified arbitrary SQL statement
	 */
	public Comuna[] findByDynamicSelect(String sql, Object[] sqlParams) throws ComunaDaoException;

	/** 
	 * Returns all rows from the COMUNA table that match the specified arbitrary SQL statement
	 */
	public Comuna[] findByDynamicWhere(String sql, Object[] sqlParams) throws ComunaDaoException;

}
