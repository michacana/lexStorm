/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.Abogados.Lex.dao;

import com.Abogados.Lex.dto.*;
import com.Abogados.Lex.exceptions.*;

public interface ContratoEstadosDao
{
	/** 
	 * Inserts a new row in the CONTRATO_ESTADOS table.
	 */
	public ContratoEstadosPk insert(ContratoEstados dto) throws ContratoEstadosDaoException;

	/** 
	 * Updates a single row in the CONTRATO_ESTADOS table.
	 */
	public void update(ContratoEstadosPk pk, ContratoEstados dto) throws ContratoEstadosDaoException;

	/** 
	 * Deletes a single row in the CONTRATO_ESTADOS table.
	 */
	public void delete(ContratoEstadosPk pk) throws ContratoEstadosDaoException;

	/** 
	 * Returns the rows from the CONTRATO_ESTADOS table that matches the specified primary-key value.
	 */
	public ContratoEstados findByPrimaryKey(ContratoEstadosPk pk) throws ContratoEstadosDaoException;

	/** 
	 * Returns all rows from the CONTRATO_ESTADOS table that match the criteria 'ID_CONTRATO_ESTADO = :idContratoEstado'.
	 */
	public ContratoEstados findByPrimaryKey(long idContratoEstado) throws ContratoEstadosDaoException;

	/** 
	 * Returns all rows from the CONTRATO_ESTADOS table that match the criteria ''.
	 */
	public ContratoEstados[] findAll() throws ContratoEstadosDaoException;

	/** 
	 * Returns all rows from the CONTRATO_ESTADOS table that match the criteria 'ID_CONTRATO_ESTADO = :idContratoEstado'.
	 */
	public ContratoEstados[] findWhereIdContratoEstadoEquals(long idContratoEstado) throws ContratoEstadosDaoException;

	/** 
	 * Returns all rows from the CONTRATO_ESTADOS table that match the criteria 'NOMBRE = :nombre'.
	 */
	public ContratoEstados[] findWhereNombreEquals(String nombre) throws ContratoEstadosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the CONTRATO_ESTADOS table that match the specified arbitrary SQL statement
	 */
	public ContratoEstados[] findByDynamicSelect(String sql, Object[] sqlParams) throws ContratoEstadosDaoException;

	/** 
	 * Returns all rows from the CONTRATO_ESTADOS table that match the specified arbitrary SQL statement
	 */
	public ContratoEstados[] findByDynamicWhere(String sql, Object[] sqlParams) throws ContratoEstadosDaoException;

}
